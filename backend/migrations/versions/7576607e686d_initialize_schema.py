"""Initialize Schema

Revision ID: 7576607e686d
Revises: 
Create Date: 2024-10-10 22:17:22.979327

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7576607e686d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('buildings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('add_to_significance_manager', sa.Boolean(), nullable=False),
    sa.Column('affects_occlusion', sa.Boolean(), nullable=False),
    sa.Column('alien_over_clocking_attenuation_scaling_factor', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('alien_over_clocking_highpass_rtpc', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('alien_over_clocking_particle_effects', sa.String(length=30), nullable=True),
    sa.Column('alien_over_clocking_pitch_rtpc', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('alien_over_clocking_volume_db_rtpc', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('alien_over_clocking_z_offset', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('allow_coloring', sa.Boolean(), nullable=False),
    sa.Column('allow_patterning', sa.Boolean(), nullable=False),
    sa.Column('alternative_material_recipes', sa.String(length=30), nullable=True),
    sa.Column('attachment_points', sa.String(length=30), nullable=True),
    sa.Column('base_production_boost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('blueprint_build_effect_id', sa.Integer(), nullable=False),
    sa.Column('build_effect_speed', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cached_skeletal_meshes', sa.String(length=30), nullable=True),
    sa.Column('can_change_potential', sa.Boolean(), nullable=False),
    sa.Column('can_change_production_boost', sa.Boolean(), nullable=False),
    sa.Column('can_contain_lightweight_instances', sa.Boolean(), nullable=False),
    sa.Column('can_ever_monitor_productivity', sa.Boolean(), nullable=False),
    sa.Column('clearance_data', sa.String(), nullable=True),
    sa.Column('contains_components', sa.Boolean(), nullable=False),
    sa.Column('current_productivity_measurement_duration', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('current_productivity_measurement_produce_duration', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('custom_scale_type', sa.String(length=30), nullable=True),
    sa.Column('default_productivity_measurement_duration', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(length=30), nullable=True),
    sa.Column('does_have_shutdown_animation', sa.Boolean(), nullable=False),
    sa.Column('effect_update_interval', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('fluid_stack_size_default', sa.String(length=30), nullable=True),
    sa.Column('fluid_stack_size_multiplier', sa.Integer(), nullable=False),
    sa.Column('force_build_effect_solo', sa.Boolean(), nullable=False),
    sa.Column('force_legacy_build_effect', sa.Boolean(), nullable=False),
    sa.Column('force_net_update_on_register_player', sa.Boolean(), nullable=False),
    sa.Column('has_been_removed_from_subsystem', sa.Boolean(), nullable=False),
    sa.Column('has_inventory_potential', sa.Boolean(), nullable=False),
    sa.Column('hide_on_build_effect_start', sa.Boolean(), nullable=False),
    sa.Column('interacting_players', sa.String(length=30), nullable=True),
    sa.Column('interaction_register_player_with_circuit', sa.Boolean(), nullable=False),
    sa.Column('is_considered_for_base_weight_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_multi_spawned_buildable', sa.Boolean(), nullable=False),
    sa.Column('is_tick_rate_managed', sa.Boolean(), nullable=False),
    sa.Column('is_useable', sa.Boolean(), nullable=False),
    sa.Column('last_productivity_measurement_duration', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('last_productivity_measurement_produce_duration', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('managed_by_lightweight_buildable_subsystem', sa.Boolean(), nullable=False),
    sa.Column('max_potential', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('max_render_distance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('min_potential', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('minimum_producing_time', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('minimum_stopped_time', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('occlusion_box_info', sa.String(length=30), nullable=True),
    sa.Column('occlusion_shape', sa.String(length=30), nullable=True),
    sa.Column('on_current_productivity_changed', sa.String(length=30), nullable=True),
    sa.Column('on_has_power_changed', sa.String(length=30), nullable=True),
    sa.Column('on_has_production_changed', sa.String(length=30), nullable=True),
    sa.Column('on_has_standby_changed', sa.String(length=30), nullable=True),
    sa.Column('on_pending_potential_changed', sa.String(length=30), nullable=True),
    sa.Column('on_pending_production_boost_changed', sa.String(length=30), nullable=True),
    sa.Column('override_potential_shard_slots', sa.Boolean(), nullable=False),
    sa.Column('override_production_shard_slot_size', sa.Boolean(), nullable=False),
    sa.Column('pipe_output_connections', sa.String(length=30), nullable=True),
    sa.Column('potential_shard_slots', sa.Integer(), nullable=False),
    sa.Column('power_consumption', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('power_consumption_exponent', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('production_boost_power_consumption_exponent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('production_shard_boost_multiplier', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('production_shard_slot_size', sa.Integer(), nullable=False),
    sa.Column('productivity_monitor_enabled', sa.Boolean(), nullable=False),
    sa.Column('remove_buildable_from_subsystem_on_dismantle', sa.Boolean(), nullable=False),
    sa.Column('replicated_built_inside_blueprint_designer', sa.Boolean(), nullable=False),
    sa.Column('scale_custom_offset', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('should_modify_world_grid', sa.Boolean(), nullable=False),
    sa.Column('should_show_attachment_point_visuals', sa.Boolean(), nullable=False),
    sa.Column('significance_range', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('skip_build_effect', sa.Boolean(), nullable=False),
    sa.Column('tick_exponent', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('timelapse_bucket_id', sa.Integer(), nullable=False),
    sa.Column('timelapse_delay', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('toggle_dormancy_on_interaction', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_name')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('abbreviated_display_name', sa.String(), nullable=True),
    sa.Column('can_be_discarded', sa.Boolean(), nullable=False),
    sa.Column('class_to_scan_for', sa.String(), nullable=True),
    sa.Column('compatible_item_descriptors', sa.String(), nullable=True),
    sa.Column('crosshair_material', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('descriptor_stat_bars', sa.String(), nullable=True),
    sa.Column('energy_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('fluid_color', sa.String(), nullable=True),
    sa.Column('form', sa.String(length=30), nullable=False),
    sa.Column('gas_color', sa.String(), nullable=True),
    sa.Column('gas_type', sa.String(length=30), nullable=False),
    sa.Column('is_alien_item', sa.Boolean(), nullable=False),
    sa.Column('menu_priority', sa.Numeric(precision=10, scale=7), nullable=False),
    sa.Column('needs_pick_up_marker', sa.Boolean(), nullable=False),
    sa.Column('persistent_big_icon', sa.String(), nullable=False),
    sa.Column('radioactive_decay', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('remember_pick_up', sa.Boolean(), nullable=False),
    sa.Column('scannable_type', sa.String(length=30), nullable=False),
    sa.Column('scanner_display_text', sa.String(length=30), nullable=True),
    sa.Column('scanner_light_color', sa.String(length=30), nullable=True),
    sa.Column('should_override_scanner_display_text', sa.Boolean(), nullable=False),
    sa.Column('small_icon', sa.String(), nullable=False),
    sa.Column('stack_size', sa.String(length=30), nullable=False),
    sa.Column('sub_categories', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_name')
    )
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('ingredients', sa.String(), nullable=False),
    sa.Column('manual_manufacturing_multiplier', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('manufactoring_duration', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('manufacturing_menu_priority', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('produced_in', sa.String(), nullable=False),
    sa.Column('product', sa.String(), nullable=False),
    sa.Column('relevant_events', sa.String(length=30), nullable=True),
    sa.Column('variable_power_consumption_constant', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('variable_power_consumption_factor', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_name')
    )
    op.create_table('alien_power_fuels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('boost_duration', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('boost_percentage', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('resource_sink_points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consumables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('custom_hands_mesh_scale', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('custom_location', sa.String(), nullable=False),
    sa.Column('custom_rotation', sa.String(), nullable=False),
    sa.Column('health_gain', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extractors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('allowed_resource_forms', sa.String(length=30), nullable=True),
    sa.Column('allowed_resources', sa.String(), nullable=True),
    sa.Column('extractor_type_name', sa.String(length=30), nullable=True),
    sa.Column('only_allow_certain_resources', sa.Boolean(), nullable=True),
    sa.Column('try_find_missing_resource', sa.Boolean(), nullable=True),
    sa.Column('extract_cycle_time', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('extract_startup_time', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('extract_startup_timer', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('items_per_cycle', sa.Integer(), nullable=True),
    sa.Column('can_play_after_start_up_stopped', sa.Boolean(), nullable=True),
    sa.Column('particle_map', sa.String(), nullable=True),
    sa.Column('sam_reference', sa.String(), nullable=True),
    sa.Column('depth_trace_origin_offset', sa.String(), nullable=True),
    sa.Column('has_lost_significance', sa.Boolean(), nullable=True),
    sa.Column('internal_mining_state_0', sa.String(length=30), nullable=True),
    sa.Column('internal_start_up_timer', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('maximum_drill_time_0', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('minimum_depth_for_placement', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('minimum_drill_time_0', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('toggle_mining_state_handle_0', sa.String(length=30), nullable=True),
    sa.Column('waterpump_timeline_direction', sa.String(length=30), nullable=True),
    sa.Column('waterpump_timeline_rtpc', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manufacturers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('current_recipe_changed', sa.String(length=30), nullable=True),
    sa.Column('factory_input_connections', sa.String(length=30), nullable=True),
    sa.Column('factory_output_connections', sa.String(length=30), nullable=True),
    sa.Column('manufacturing_speed', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pipe_input_connections', sa.String(length=30), nullable=True),
    sa.Column('is_powered', sa.Boolean(), nullable=True),
    sa.Column('production_effects_running', sa.Boolean(), nullable=True),
    sa.Column('estimated_maximum_power_consumption', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('estimated_mininum_power_consumption', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ao_attenuation_scaling_factor', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ao_layer_z_offset', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('color', sa.String(length=30), nullable=True),
    sa.Column('current_color_vfx', sa.String(), nullable=True),
    sa.Column('current_packaging_mode', sa.String(length=30), nullable=True),
    sa.Column('current_potential_convert', sa.String(), nullable=True),
    sa.Column('current_producing_seek_time', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('current_recipe_check', sa.String(length=30), nullable=True),
    sa.Column('game_time_at_producing', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('is_anim_producing', sa.Boolean(), nullable=True),
    sa.Column('is_radio_active', sa.Boolean(), nullable=True),
    sa.Column('lightning_timer', sa.String(length=30), nullable=True),
    sa.Column('notify_name_r_eferences', sa.String(), nullable=True),
    sa.Column('previous_recipe_check', sa.String(length=30), nullable=True),
    sa.Column('rtpc_ao_highpass_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rtpc_ao_pitch', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rtpc_ao_volume_db', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sequence_duration', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('socket_stopped_ak_components', sa.String(length=30), nullable=True),
    sa.Column('start_vector_vfx_large_end', sa.String(), nullable=True),
    sa.Column('start_vector_vfx_large_start', sa.String(), nullable=True),
    sa.Column('start_vector_vfx_medium_end', sa.String(), nullable=True),
    sa.Column('start_vector_vfx_medium_start', sa.String(), nullable=True),
    sa.Column('start_vector_vfx_small_end', sa.String(), nullable=True),
    sa.Column('start_vector_vfx_small_start', sa.String(), nullable=True),
    sa.Column('stopped_ak_components', sa.String(length=30), nullable=True),
    sa.Column('stopped_producing_animation_sounds', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nuclear_fuels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('amount_of_waste', sa.Integer(), nullable=False),
    sa.Column('spent_fuel_class', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_shards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('extra_potential', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('extra_production_boost', sa.Numeric(precision=6, scale=2), nullable=False),
    sa.Column('power_shard_type', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raw_resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('collect_speed_multiplier', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('decal_size', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('manual_mining_audio_name', sa.String(length=30), nullable=True),
    sa.Column('ping_color', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_compatible_buildings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=True),
    sa.Column('is_produced_in_building', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_inputs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('input_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recipe_outputs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('output_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smelters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('building_id', sa.Integer(), nullable=False),
    sa.Column('current_recipe_changed', sa.String(length=30), nullable=True),
    sa.Column('factory_input_connections', sa.String(length=30), nullable=True),
    sa.Column('factory_output_connections', sa.String(length=30), nullable=True),
    sa.Column('manufacturing_speed', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('pipe_input_connections', sa.String(length=30), nullable=True),
    sa.Column('is_pending_to_kill_vfx', sa.Boolean(), nullable=True),
    sa.Column('cached_current_potential', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('smelters')
    op.drop_table('recipe_outputs')
    op.drop_table('recipe_inputs')
    op.drop_table('recipe_compatible_buildings')
    op.drop_table('raw_resources')
    op.drop_table('power_shards')
    op.drop_table('nuclear_fuels')
    op.drop_table('manufacturers')
    op.drop_table('extractors')
    op.drop_table('consumables')
    op.drop_table('components')
    op.drop_table('alien_power_fuels')
    op.drop_table('recipes')
    op.drop_table('items')
    op.drop_table('buildings')
    # ### end Alembic commands ###
